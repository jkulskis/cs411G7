import React, { useState, useEffect } from 'react';
import { Link, useHistory} from "react-router-dom";
import './App.css';
import {Form, Button} from 'semantic-ui-react';

function Page4() {

    const history = useHistory();
    const [playlistUrl, setPlaylistUrl] = useState("");
    const [playlistImg, setPlaylistImg] = useState("");

    useEffect(() => {
        document.title = "Playlist";
        const response = async () => {
            await fetch('/playlist', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
            }).then(function (res) {
                if (res.status === 400) { // logged out, go back to logic page
                    localStorage["durationLengthError"] = "1";
                    history.push("/");
                    return;
                }
                if (res.status === 501) { // logged out, go back to logic page
                    localStorage["durationLengthError"] = "2";
                    history.push("/");
                    return;
                }
                if (res.status === 401) { // logged out, go back to logic page
                    localStorage["loggedOut"] = "1";
                    history.push("/");
                }
                else
                    return(res.json())
            })
            .then(function (r) {
                if (r) {
                    setPlaylistUrl(r.playlist.external_urls.spotify);
                    document.getElementById("playlistResult").classList.remove("hidden");
                    document.getElementById("generatingLabel").classList.add("hidden");
                    if (r.playlist.images.length > 1) // playlists with only 1 song don't have multiple images
                        setPlaylistImg(r.playlist.images[1].url); // height of 300 image
                    else
                        setPlaylistImg(r.playlist.images[0].url); // height of 300 image
                }
            })
        }
        response()
    }, []);

    return (
        <Form>
            <div className="container">
            <center><h1>Playlist Generated for {localStorage["display_name"]}</h1></center>
            <br />
            <br />
            <hr></hr>
            {/* load gif generated by https://loading.io/ */}
            <img id="generatingLabel" src="/load.gif" alt="Generating your playlist..." />
            <div className="container hidden" id="playlistResult">
                <h2>Here is the playlist we made for you.</h2>
                <br /> 
                <img src={playlistImg} width="300" height="300" alt="playlist cover" />
                <p>Click on the button below to listen to your playlist in Spotify.</p>
                <br />
                    <Button 
                        onClick={() => {window.open(playlistUrl)}}
                        className="button"> 
                        My Playlist
                    </Button>
                <br />
                <br />         
                <p>If you want to make another playlist, click on the button below to start over.</p>
                <br />
                <center><Link to="/page1">
                    <button className="buttonstartover">Start Over</button></Link>
                </center>
            </div>
            </div>
        </Form>
    );
}

export default Page4;